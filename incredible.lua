--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v74=0 -0 ;local v75;while true do if (v74==(0 -0)) then v75=(v31/(2^(v32-(1 -(0 -0)))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -((1922 -(68 + 997)) + 74)))) + (569 -(367 + 201)))) ;return v75-(v75%(928 -(214 + 713))) ;end end else local v76=0 + 0 ;local v77;while true do if ((0 + 0)==v76) then v77=((2149 -(226 + 1044)) -(282 + 595))^(v32-(1638 -(1523 + 114))) ;return (((v31%(v77 + v77))>=v77) and 1) or (0 + (0 -0)) ;end end end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + 3 );v19=v19 + (121 -(32 + 85)) ;return (v37 * (16441815 + 335401)) + (v36 * 65536) + (v35 * (57 + 199)) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=392 -(232 + 160) ;local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if (v38~=(812 -(569 + 242))) then else v41=nil;v42=nil;v38=2;end if (v38~=3) then else v45=nil;while true do local v96=0;local v97;while true do if (v96==(0 -0)) then v97=0 + 0 ;while true do if (v97==(1025 -(706 + 318))) then if (v39~=2) then else for v111=1252 -(721 + 530) ,v44 do local v112=1271 -(945 + 326) ;local v113;local v114;local v115;while true do if (v112==(1277 -(37 + 1240))) then v113=0;v114=nil;v112=3 -2 ;end if ((3 -2)==v112) then v115=nil;while true do if (v113~=(1 -0)) then else if (v114==1) then v115=v22()~=(0 + 0) ;elseif (v114==(1 + 1)) then v115=v25();elseif (v114~=(3 -0)) then else v115=v26();end v45[v111]=v115;break;end if (v113~=(0 + 0)) then else local v129=1474 -(1329 + 145) ;while true do if (v129==(1 + 0)) then v113=972 -(140 + 831) ;break;end if (v129~=(1171 -(418 + 753))) then else v114=v22();v115=nil;v129=1851 -(1409 + 441) ;end end end end break;end end end v43[3]=v22();for v116=719 -(15 + 703) ,v24() do local v117=0 + 0 ;local v118;while true do if (v117~=0) then else v118=v22();if (v21(v118,1,1)~=(438 -(262 + 176))) then else local v121=1721 -(345 + 1376) ;local v122;local v123;local v124;local v125;local v126;while true do if (v121==(690 -(198 + 490))) then v126=nil;while true do if (v122~=(4 -3)) then else local v231=0 -0 ;while true do if (v231~=(1207 -(696 + 510))) then else v122=3 -1 ;break;end if (v231~=(1262 -(1091 + 171))) then else local v255=0;while true do if (v255~=1) then else v231=1 + 0 ;break;end if (v255==0) then v125=nil;v126=nil;v255=1146 -(466 + 679) ;end end end end end if (v122~=(0 -0)) then else local v232=0 -0 ;while true do if (v232==0) then v123=374 -(123 + 251) ;v124=nil;v232=2 -1 ;end if (v232==(4 -3)) then v122=1;break;end end end if ((5 -3)==v122) then while true do if (v123~=(698 -(208 + 490))) then else local v256=1900 -(106 + 1794) ;while true do if (v256==(1 + 0)) then v123=1;break;end if (v256==(0 + 0)) then local v297=0;while true do if (v297~=1) then else v256=1;break;end if (v297~=(0 -0)) then else v124=v21(v118,5 -3 ,1 + 2 );v125=v21(v118,588 -(57 + 527) ,3 + 3 );v297=1428 -(41 + 1386) ;end end end end end if (v123~=(105 -(17 + 86))) then else local v257=836 -(660 + 176) ;local v258;while true do if (v257~=(0 + 0)) then else v258=0;while true do if (v258~=(0 + 0)) then else local v314=0 -0 ;while true do if (v314==(203 -(14 + 188))) then v258=2 -1 ;break;end if (v314==(675 -(534 + 141))) then if (v21(v125,1,167 -(122 + 44) )~=1) then else v126[1 + 1 ]=v45[v126[2 -0 ]];end if (v21(v125,2 + 0 ,2 + 0 )~=(1 -0)) then else v126[4 -1 ]=v45[v126[1 + 2 ]];end v314=1;end end end if (v258~=(2 -1)) then else v123=3;break;end end break;end end end if (v123==1) then local v259=65 -(30 + 35) ;local v260;while true do if (v259~=0) then else v260=0 + 0 ;while true do if ((0 + 0)==v260) then v126={v23(),v23(),nil,nil};if (v124==0) then local v320=1257 -(1043 + 214) ;local v321;while true do if ((0 -0)~=v320) then else v321=0 -0 ;while true do if ((0 + 0)~=v321) then else v126[3]=v23();v126[4]=v23();break;end end break;end end elseif (v124==(2 -1)) then v126[1215 -(323 + 889) ]=v24();elseif (v124==(7 -5)) then v126[870 -(550 + 317) ]=v24() -(2^(22 -6)) ;elseif (v124==3) then local v352=580 -(361 + 219) ;local v353;local v354;while true do if (v352~=(320 -(53 + 267))) then else local v360=0 -0 ;while true do if (v360~=1) then else v352=2 -1 ;break;end if (v360==0) then v353=285 -(134 + 151) ;v354=nil;v360=1;end end end if (v352==(1666 -(970 + 695))) then while true do if ((982 -(18 + 964))==v353) then v354=0 -0 ;while true do if (v354~=(1990 -(582 + 1408))) then else v126[11 -8 ]=v24() -((6 -4)^(10 + 6)) ;v126[4]=v23();break;end end break;end end break;end end end v260=1 + 0 ;end if (v260==(851 -(20 + 830))) then v123=2 + 0 ;break;end end break;end end end if (v123==(3 -0)) then if (v21(v125,3,3)==(1 + 0)) then v126[742 -(542 + 196) ]=v45[v126[8 -4 ]];end v40[v116]=v126;break;end end break;end end break;end if (v121==(1 + 0)) then v124=nil;v125=nil;v121=7 -5 ;end if (v121~=(1824 -(1195 + 629))) then else v122=0 + 0 ;v123=nil;v121=2 -1 ;end end end break;end end end v39=7 -4 ;end if (v39~=(0 -0)) then else local v107=1551 -(1126 + 425) ;local v108;while true do if ((405 -(118 + 287))==v107) then v108=0 -0 ;while true do if (v108==(242 -(187 + 54))) then v42={};v39=1122 -(118 + 1003) ;break;end if (v108~=(0 -0)) then else local v127=780 -(162 + 618) ;while true do if (v127~=(0 + 0)) then else v40={};v41={};v127=1 + 0 ;end if (v127==(1 -0)) then v108=1 -0 ;break;end end end end break;end end end break;end if (v97~=0) then else local v105=0 -0 ;while true do if (v105~=(1 + 0)) then else v97=1;break;end if ((1636 -(1373 + 263))==v105) then if (v39==(1003 -(451 + 549))) then local v119=0 + 0 ;local v120;while true do if (v119==(0 -0)) then v120=0 -0 ;while true do local v130=1384 -(746 + 638) ;while true do if (v130==(0 + 0)) then if (v120~=(2 -1)) then else return v43;end if (v120~=(0 -0)) then else local v233=0;while true do if (v233~=1) then else v120=1 -0 ;break;end if (v233~=(341 -(218 + 123))) then else for v278=1582 -(1535 + 46) ,v24() do v41[v278-1 ]=v29();end for v280=1 + 0 ,v24() do v42[v280]=v24();end v233=1;end end end break;end end end break;end end end if (v39==(1 + 0)) then v43={v40,v41,nil,v42};v44=v24();v45={};v39=1469 -(899 + 568) ;end v105=1 + 0 ;end end end end break;end end end break;end if (v38~=(0 -0)) then else local v90=0;while true do if (v90~=1) then else v38=604 -(268 + 335) ;break;end if (v90==(0 -0)) then v39=0;v40=nil;v90=1;end end end if (v38==(292 -(60 + 230))) then local v91=572 -(426 + 146) ;while true do if (v91~=(1130 -(369 + 761))) then else v43=nil;v44=nil;v91=1 + 0 ;end if (v91~=(1 + 0)) then else v38=1459 -(282 + 1174) ;break;end end end end end v30=nil;v18=7;end if (v18==4) then function v25()local v46=v24();local v47=v24();local v48=1;local v49=(v21(v47,1 -(1661 -(1477 + 184)) ,258 -(64 + 174) ) * ((1 + 1)^((63 -16) -15))) + v46 ;local v50=v21(v47,357 -(144 + 192) ,(231 + 16) -(42 + 174) );local v51=((v21(v47,25 + 7 )==(1 + 0)) and  -(1 + 0)) or 1 ;if (v50==(1504 -(363 + 1141))) then if (v49==(1580 -((2039 -(564 + 292)) + 397))) then return v51 * (0 -0) ;else v50=1 + 0 ;v48=0 -0 ;end elseif (v50==(1531 + 516)) then return ((v49==(1975 -(1913 + 62))) and (v51 * ((1 + 0)/(0 -0)))) or (v51 * NaN) ;end return v8(v51,v50-(2956 -(565 + 1368)) ) * (v48 + (v49/(2^(195 -143)))) ;end v26=nil;function v26(v52)local v53;if  not v52 then v52=v24();if (v52==(0 -0)) then return "";end end v53=v3(v16,v19,(v19 + v52) -(305 -(244 + 60)) );v19=v19 + v52 ;local v54={};for v67=1 + 0 , #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end v18=5;end if (v18==2) then function v22()local v55=1125 -(936 + 189) ;local v56;while true do if (v55==(476 -(41 + 435))) then v56=v1(v16,v19,v19);v19=v19 + (1002 -(938 + 63)) ;v55=(1139 -(782 + 356)) + 0 ;end if (v55==(1 + 0)) then return v56;end end end v23=nil;function v23()local v57=267 -(176 + 91) ;local v58;local v59;while true do if (v57==(2 -1)) then return (v59 * ((1334 -958) -120)) + v58 ;end if (((3733 -2641) -(975 + 117))==v57) then v58,v59=v1(v16,v19,v19 + (1877 -(157 + (2736 -(697 + 321)))) );v19=v19 + (5 -3) + 0 ;v57=1;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60)if (v1(v60,2)==79) then local v78=0;while true do if (v78==0) then v20=v0(v3(v60,1,1));return "";end end else local v79=v2(v0(v60,16));if v20 then local v98=0;local v99;while true do if (v98==1) then return v99;end if (v98==0) then v99=v5(v79,v20);v20=nil;v98=1;end end else return v79;end end end);v18=1;end if (v18==7) then function v30(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v80=v64;local v81=v65;local v82=v66;local v83=v28;local v84={};local v85={};local v86={};for v92=(439 -(397 + 42)) -0 ,v72 do if ((v92>=v82) or ((1484 -840)>=(860 + 1348))) then v84[v92-v82 ]=v71[v92 + (1 -0) ];else v86[v92]=v71[v92 + (2 -1) ];end end local v87=(v72-v82) + (1228 -(322 + 905)) ;local v88;local v89;while true do local v93=0;local v94;while true do if (((1919 -(602 + 9))<(2602 -(449 + 740))) and (v93==(872 -(826 + 15 + 31)))) then v94=947 -(245 + 702) ;while true do if ((v94==(0 -0)) or ((386 + 814)>(6299 -(260 + (2438 -(24 + 776)))))) then local v104=440 -(382 + 58) ;while true do if ((v104==(3 -2)) or ((1674 + 340)<(1957 -1010))) then v94=2 -1 ;break;end if ((v104==((1856 -651) -(902 + 303))) or ((5827 -(3958 -(222 + 563)))==(536 -313))) then v88=v80[v69];v89=v88[1 + 0 ];v104=1691 -(1121 + 569) ;end end end if ((v94==(215 -(22 + 192))) or ((4125 -(483 + (440 -240)))<=(4011 -(1404 + 59)))) then if (((7868 -4993)>=(1966 -502)) and (v89<=((566 + 219) -(468 + 297)))) then if ((v89<=((761 -(23 + 167)) -(334 + (2026 -(690 + 1108))))) or ((16180 -11383)>=(11341 -6448))) then if ((v89<=(6 -2)) or ((157 + 394)>(2304 -(141 + 95)))) then if (((2077 + 37)>(2429 -(536 + 949))) and (v89<=1)) then if ((v89>(0 -0)) or (2262>=(726 + 2370))) then local v131=0 -0 ;local v132;local v133;local v134;local v135;local v136;while true do if (((0 + 0)==v131) or ((1175 + 1080)>=3537)) then v132=0 -(0 + 0) ;v133=nil;v131=1 + 0 ;end if ((v131==(164 -(92 + (919 -(40 + 808))))) or (3837<(646 + 660))) then v134=nil;v135=nil;v131=2 -0 ;end if (((3715 -(574 + 191))==(2434 + 516)) and (v131==(4 -2))) then v136=nil;while true do if ((v132==1) or ((2413 + 2310)<(4147 -(254 + 595)))) then v135=nil;v136=nil;v132=128 -(10 + 45 + 71) ;end if (((1495 -359)>=(1944 -(573 + 1217))) and (v132==2)) then while true do if ((v133==(2 -1)) or (271>(362 + (16772 -12386)))) then v136=v88[4 -1 ];for v292=940 -(714 + 225) ,v136 do v135[v292]=v86[v134 + v292 ];end break;end if (((13852 -9112)>=(4393 -1241)) and (v133==(0 + 0))) then local v283=0 + 0 ;local v284;while true do if ((v283==(0 -0)) or ((3384 -(118 + 688))>=3390)) then v284=48 -(25 + 23) ;while true do if (((8 + 33)<=(3547 -(927 + 959))) and ((3 -2)==v284)) then v133=733 -(16 + 716) ;break;end if (((1159 -558)<(3657 -(11 + 86))) and (v284==(0 -0))) then v134=v88[(152 + 135) -(175 + 61 + 49) ];v135=v86[v134];v284=2 -1 ;end end break;end end end end break;end if (((1159 -924)<(2483 -(503 + 1293))) and (v132==(0 -0))) then local v244=(571 -(47 + 524)) + 0 ;while true do if (((5610 -(810 + 251))>1153) and (v244==(1 + 0))) then v132=1 + 0 ;break;end if (((0 + 0)==v244) or ((5207 -(43 + 490))<((3508 + 1897) -((1943 -1232) + 22)))) then v133=0 -0 ;v134=nil;v244=1;end end end end break;end end else v86[v88[861 -(240 + 619) ]]=v86[v88[1 + 2 ]]^v88[5 -1 ] ;end elseif ((3668<(6819 -2258)) and (v89<=(1 + 1))) then local v138=1744 -(1344 + 400) ;local v139;local v140;while true do if ((v138==1) or ((860 -(255 + 150))==3605)) then while true do if ((v139==(0 + 0)) or (2663==((4045 -2271) + 1538))) then v140=v88[2];v86[v140](v13(v86,v140 + (4 -(1729 -(1165 + 561))) ,v88[9 -6 ]));break;end end break;end if (((6016 -(404 + 1335))<=4475) and (v138==(406 -(183 + 223)))) then v139=0 -0 ;v140=nil;v138=1;end end elseif ((v89==(2 + 1)) or (870==1189)) then local v172=0;local v173;local v174;while true do if (((559 + 994)<=(3470 -(10 + 327))) and (v172==(1 + 0))) then while true do if (((338 -(118 + 220))==v173) or ((746 + 1491)>=(3960 -(108 + 341)))) then v174=v88[2];v86[v174]=v86[v174](v13(v86,v174 + 1 + 0 ,v70));break;end end break;end if ((v172==0) or ((5597 -4273)>(4513 -(711 + 782)))) then v173=0 -0 ;v174=nil;v172=470 -(270 + 199) ;end end elseif (v86[v88[1 + 1 ]] or ((89 + 2903)==((11459 -7759) -(580 + 1239)))) then v69=v69 + (2 -1) ;else v69=v88[3 + 0 ];end elseif ((3106>(55 + 1471)) and (v89<=(2 + 1 + 3))) then if ((3023<3870) and (v89>((492 -(341 + 138)) -8))) then if (((89 + 54)>(1241 -(175 + 470 + 522))) and (v88[1792 -(1010 + 780) ]==v86[v88[4 + 0 ]])) then v69=v69 + (4 -3) ;else v69=v88[8 -5 ];end else v86[v88[1838 -((2156 -1111) + 791) ]]=v86[v88[7 -4 ]];end elseif (((27 -9)<2112) and (v89<=(512 -(351 + 154)))) then v86[v88[2]]=v88[1577 -(1281 + 293) ];elseif (((1363 -(28 + 238))<=(3637 -2009)) and (v89==8)) then local v176=1559 -(1381 + 178) ;local v177;local v178;while true do if (((4343 + 287)==((4060 -(89 + 237)) + 896)) and (v176==(0 + 0))) then local v234=0;while true do if (((12203 -8663)>(8631 -5948)) and ((0 + 0)==v234)) then v177=v88[472 -((801 -420) + 89) ];v178=v86[v177];v234=1 + (881 -(581 + 300)) ;end if (((3243 + 1551)>=(5610 -2335)) and (v234==(1157 -(1074 + 82)))) then v176=1 -0 ;break;end end end if (((3268 -(214 + 1570))==(2939 -(990 + 465))) and (v176==(1 + 0))) then for v246=v177 + 1 + 0 ,v88[3 + (1220 -(855 + 365)) ] do v7(v178,v86[v246]);end break;end end else local v179=0 -0 ;local v180;local v181;local v182;local v183;while true do if (((3158 -((3961 -2293) + 58))<3555) and (v179==(628 -(512 + 114)))) then for v247=v180,v70 do local v248=0;while true do if ((v248==((0 + 0) -0)) or (1065>(7396 -3818))) then v183=v183 + (3 -2) ;v86[v247]=v181[v183];break;end end end break;end if ((v179==1) or (4795<(655 + 752))) then v70=(v182 + v180) -(1 + 0) ;v183=0 + 0 ;v179=6 -4 ;end if (((3847 -((1344 -(1030 + 205)) + 1885))<(6282 -(1269 + 188 + 12))) and (v179==(0 -0))) then local v235=815 -(98 + 667 + 50) ;while true do if ((v235==(827 -(802 + 24))) or ((4864 -2043)<(3070 -639))) then v179=1;break;end if ((v235==(0 + 0)) or ((2209 + 665)<(359 + 1822))) then v180=v88[2];v181,v182=v83(v86[v180](v86[v180 + 1 ]));v235=1;end end end end end elseif ((v89<=14) or ((581 + 2108)<=(954 -611))) then if ((v89<=(36 -25)) or ((2155 -(156 + 130))==(719 + 1290))) then if ((v89>(5 + 5)) or ((2925 + 621)<(1689 + 633))) then if ((v86[v88[1 + 1 ]]==v88[1437 -(797 + 636) ]) or (2082==4773)) then v69=v69 + (4 -3) ;else v69=v88[1622 -(1427 + 192) ];end else v86[v88[2]]=v86[v88[3]] + v88[2 + (4 -2) ] ;end elseif ((3244>((4127 -1678) -(2854 -1460))) and (v89<=(11 + 1))) then v86[v88[1 + 1 + 0 ]]();elseif ((v89>(339 -(192 + 134))) or ((4589 -(316 + 960))<=1778)) then local v185=0 + 0 ;local v186;while true do if ((v185==0) or ((1097 + 324)>=(1945 + 159))) then v186=v88[(5 + 2) -5 ];v86[v186]=v86[v186]();break;end end else local v187=551 -((152 -(10 + 59)) + 468) ;local v188;local v189;while true do if (((3618 -(1202 + 604))<=(15166 -11917)) and (v187==(0 -0))) then v188=0 -0 ;v189=nil;v187=326 -(13 + 32 + 280) ;end if (((1567 + 56)<=(1710 + 247)) and (v187==(1 + (0 -0)))) then while true do if ((((3605 -(671 + 492)) + 1970)==(3513 + 899)) and (v188==(0 + 0))) then v189=v88[3 -1 ];v86[v189]=v86[v189](v86[v189 + ((3127 -(369 + 846)) -(340 + 1571)) ]);break;end end break;end end end elseif (((691 + 1059)>=(2614 -(1733 + 39))) and (v89<=(46 -29))) then if (((5406 -(125 + 241 + 668))>(3798 -(1096 + 852))) and (v89<=(7 + 8))) then v63[v88[3 -0 ]]=v86[v88[2]];elseif (((226 + 6)<(1333 -(409 + 88 + 15))) and (v89==16)) then local v190=236 -(46 + 190) ;local v191;local v192;while true do if (((613 -(51 + 44))<((2200 -(1036 + 909)) + 647)) and (v190==(1317 -(1114 + 203)))) then local v238=0;while true do if (((3720 -(228 + 498))>858) and ((1 + 0)==v238)) then v190=1 + 0 ;break;end if ((v238==(663 -(174 + 489))) or ((9782 -6027)<=(2820 -(830 + 1075)))) then v191=0;v192=nil;v238=525 -(303 + 221) ;end end end if ((((4147 + 1068) -(231 + 1038))>(3120 + 623)) and (v190==(1163 -(171 + 991)))) then while true do if ((v191==(0 -0)) or ((5501 -4166)>=(8877 -5571))) then v192=v88[4 -(205 -(11 + 192)) ];v86[v192]=v86[v192](v13(v86,v192 + 1 + 0 ,v88[10 -7 ]));break;end end break;end end elseif (((13973 -(4614 + 4515))>(3631 -1378)) and (v86[v88[2]]==v86[v88[12 -8 ]])) then v69=v69 + (1249 -(111 + 1137)) ;else v69=v88[161 -(91 + 67) ];end elseif (((1345 -893)==452) and (v89<=(5 + 13))) then v86[v88[525 -(423 + (275 -(135 + 40))) ]]=v86[v88[3]][v88[1 + 3 ]];elseif ((v89==(52 -33)) or (4557<(1088 + 999))) then v86[v88[773 -(326 + 445) ]]=v62[v88[13 -10 ]];else v69=v88[6 -3 ];end elseif (((9042 -5168)==3874) and (v89<=31)) then if ((v89<=25) or ((2649 -(530 + 181))>((14091 -8275) -(614 + 161 + 106)))) then if ((v89<=(54 -(19 + 13))) or ((6925 -2670)<(7976 -4553))) then if (((4153 -2699)<=(647 + 1844)) and (v89>21)) then local v150=0 -0 ;local v151;while true do if ((v150==(0 -(0 -0))) or (4157<=(4615 -(1293 + 519)))) then v151=v88[3 -1 ];v86[v151](v86[v151 + (2 -1) ]);break;end end else v86[v88[3 -1 ]]=v86[v88[(17 -5) -9 ]][v86[v88[9 -5 ]]];end elseif ((((2747 -(50 + 126)) + (6354 -4072))>=(609 + 2373)) and (v89<=((12 + 40) -29))) then v86[v88[1 + 1 ]]=v86[v88[1 + 2 ]] * v88[3 + 1 ] ;elseif (((5230 -(709 + (1800 -(1233 + 180))))>(5215 -(673 + 1185))) and (v89>(69 -45))) then v86[v88[6 -4 ]]={};else v86[v88[2 -0 ]]=v63[v88[3 + 0 ]];end elseif ((v89<=((990 -(522 + 447)) + 7)) or (3417<(3421 -887))) then if ((v89<=(7 + 19)) or (2722<=(326 -162))) then local v155=0 -0 ;local v156;local v157;local v158;local v159;while true do if ((v155==(1881 -(446 + 1434))) or ((3691 -((2461 -(107 + 1314)) + 243))<(6294 -4185))) then v70=(v158 + v156) -1 ;v159=0;v155=1849 -(559 + 1288) ;end if ((v155==(1933 -(609 + 1322))) or ((487 -(13 + 441))==1455)) then for v228=v156,v70 do local v229=0 -(0 + 0) ;local v230;while true do if ((v229==(0 -0)) or ((2206 -1763)>=(150 + 3865))) then v230=0 -0 ;while true do if ((3382>166) and (v230==(0 + 0))) then v159=v159 + 1 + 0 ;v86[v228]=v157[v159];break;end end break;end end end break;end if ((v155==(0 -0)) or (280==(1674 + 1385))) then v156=v88[3 -1 ];v157,v158=v83(v86[v156](v13(v86,v156 + 1 + 0 ,v70)));v155=1 + 0 ;end end elseif (((1352 + (1611 -1082))>(1086 + 207)) and (v89>27)) then local v199=0;local v200;local v201;local v202;local v203;local v204;while true do if (((2307 + 50)==2357) and (v199==(435 -(153 + 280)))) then v204=nil;while true do if (((355 -232)==(111 + 12)) and (v200==(1 + 0 + 0))) then local v271=0 + 0 ;while true do if ((v271==(0 + 0)) or ((766 + (575 -285))>=(5164 -1772))) then v203=nil;v204=nil;v271=1 + 0 ;end if ((v271==(668 -((352 -263) + (2488 -(716 + 1194))))) or ((14 + 759 + 308)<(2234 -1159))) then v200=1 + 1 ;break;end end end if ((v200==0) or ((2098 -(572 + 477))>=(598 + 3834))) then local v272=0 + 0 ;while true do if ((v272==(1 + 0)) or ((4854 -(84 + 2))<=(1393 -547))) then v200=1 + 0 ;break;end if ((v272==(842 -(497 + 345))) or ((86 + 3272)<=(241 + 1179))) then v201=0;v202=nil;v272=1334 -(605 + 728) ;end end end if ((v200==(2 + 0)) or ((8312 -4573)<=(138 + 2867))) then while true do if ((v201==(7 -5)) or ((1496 + 163)>=(5912 -3778))) then for v303=1 + 0 ,v88[493 -(457 + 32) ] do local v304=0 + 0 ;local v305;local v306;while true do if ((v304==(1402 -(832 + 570))) or ((3072 + 188)<(615 + 1740))) then local v317=0 -0 ;while true do if (((0 + 0)==v317) or (669==(5019 -(588 + 208)))) then v305=0 -0 ;v306=nil;v317=1801 -((1387 -(74 + 429)) + 916) ;end if ((((1 -0) -0)==v317) or (1692<(341 + 247))) then v304=654 -(232 + 421) ;break;end end end if (((1890 -(1569 + 320))==v304) or ((1177 + 3620)<3651)) then while true do if ((v305==(0 + 0 + 0)) or ((14075 -9898)>(11102 -6252))) then local v325=605 -(316 + 289) ;while true do if ((v325==(0 -(0 + 0))) or ((19 + 381)>(2564 -(666 + 787)))) then local v336=425 -(360 + (200 -135)) ;while true do if (((2852 + 199)>1005) and (v336==(254 -(79 + 175)))) then v69=v69 + (1 -0) ;v306=v80[v69];v336=(2 -1) + 0 ;end if (((11319 -7626)<=((8871 -(279 + 154)) -4056)) and ((900 -(503 + 396))==v336)) then v325=1;break;end end end if ((v325==1) or ((3463 -((870 -(454 + 324)) + 89))>(7953 -3853))) then v305=1 + 0 ;break;end end end if ((v305==(1 + 0)) or ((14019 -10439)<2844)) then if (((13 + 76)<(10237 -5747)) and (v306[1 + 0 ]==(3 + 2))) then v204[v303-(2 -1) ]={v86,v306[4 -(18 -(12 + 5)) ]};else v204[v303-(1245 -(485 + 759)) ]={v62,v306[1192 -(442 + 747) ]};end v85[ #v85 + 1 ]=v204;break;end end break;end end end v86[v88[2]]=v30(v202,v203,v63);break;end if ((v201==(1135 -(832 + 303))) or ((5929 -(88 + 858))<1808)) then local v299=0 + 0 ;local v300;while true do if (((3169 + 660)>3769) and (v299==(0 + 0))) then v300=789 -(766 + 23) ;while true do if (((7331 -5846)<=2904) and (v300==(0 -0))) then v202=v81[v88[7 -4 ]];v203=nil;v300=3 -2 ;end if (((5342 -(1036 + 20 + 17))==(3027 + 1242)) and (v300==1)) then v201=1 -0 ;break;end end break;end end end if ((387<=(2189 + 593)) and (v201==(1481 -(641 + (2137 -1298))))) then local v301=0;local v302;while true do if ((v301==(913 -(910 + 2 + 1))) or ((4840 -2941)<=(2601 -(1466 + 218)))) then v302=0 + 0 ;while true do if (((1148 -(556 + 592))==v302) or ((1534 + 2778)<=((2777 -(277 + 816)) -(329 + 479)))) then local v323=0;while true do if (((3086 -((743 -569) + (1863 -(1058 + 125))))<=(8920 -(1186 + 5138))) and (1==v323)) then v302=1 -0 ;break;end if (((1496 + 599)<3686) and (v323==(739 -(396 + 343)))) then v204={};v203=v10({},{__index=function(v337,v338)local v339=0;local v340;while true do if ((v339==(0 + 0)) or ((3072 -(29 + 1448))>=(5863 -((1110 -(815 + 160)) + 1254)))) then local v358=(0 -0) -0 ;while true do if ((v358==0) or (4619<(13456 -(25100 -14526)))) then v340=v204[v338];return v340[1][v340[2 + 0 ]];end end end end end,__newindex=function(v341,v342,v343)local v344=1527 -(389 + 1138) ;local v345;local v346;while true do if ((v344==(575 -(102 + 472))) or ((278 + 16)>=(2679 + 2152))) then while true do if (((1892 + 137)<=(4629 -(320 + 1225))) and (v345==(0 -(0 + 0)))) then v346=v204[v342];v346[(2 -1) + 0 ][v346[1466 -(157 + 1307) ]]=v343;break;end end break;end if ((0==v344) or ((3896 -(821 + 1038))==((7935 -(41 + 1857)) -3617))) then local v359=(1893 -(1222 + 671)) + 0 ;while true do if (((7918 -3460)>3904) and (v359==0)) then v345=0 + 0 ;v346=nil;v359=2 -1 ;end if (((1462 -(834 + 192))>=(8 + 115)) and (v359==(1 + 0))) then v344=1 + (0 -0) ;break;end end end end end});v323=1;end end end if (((774 -274)<(2609 -793)) and (v302==(305 -(300 + 4)))) then v201=1 + 1 ;break;end end break;end end end end break;end end break;end if (((9355 -(6963 -(229 + 953)))==(3936 -((1886 -(1111 + 663)) + 250))) and (v199==(0 + (1579 -(874 + 705))))) then v200=0 -0 ;v201=nil;v199=1 + 0 ;end if (((115 + 106)<(292 + 98)) and (v199==(1 + 0))) then v202=nil;v203=nil;v199=1 + 1 + 0 ;end end else local v205=1414 -(1001 + 413) ;local v206;local v207;while true do if ((v205==0) or (2213<=1421)) then local v239=0;while true do if (((6819 -3761)<(5742 -(244 + 638))) and ((694 -(627 + 66))==v239)) then v205=2 -1 ;break;end if ((v239==0) or (1296>=4446)) then v206=v88[2];v207={};v239=603 -(512 + 90) ;end end end if ((v205==(1907 -(1665 + 241))) or ((2110 -(373 + 344))>(2025 + 2464))) then for v249=1 + 0 , #v85 do local v250=0 -0 ;local v251;local v252;while true do if ((v250==(0 -0)) or ((5523 -(35 + 1064))<(20 + 7))) then v251=0 -0 ;v252=nil;v250=1 + 0 ;end if ((v250==(1237 -(298 + 938))) or ((3256 -(233 + 1026))>(5481 -(434 + 202 + 1030)))) then while true do if (((1772 + 1693)>(1869 + 44)) and ((0 + 0)==v251)) then v252=v85[v249];for v308=0 + 0 , #v252 do local v309=0;local v310;local v311;local v312;local v313;while true do if (((954 -((114 -59) + 166))<(353 + 42 + 1424)) and (v309==(1 + 0))) then v312=nil;v313=nil;v309=7 -5 ;end if ((v309==(299 -(36 + (940 -(642 + 37))))) or ((7685 -3290)==(6123 -(34 + 1334)))) then while true do if ((v310==(0 + 0)) or ((2948 + 845)<2369)) then local v331=1283 -(1035 + 248) ;while true do if ((v331==(21 -(20 + 1 + 0))) or ((2128 + 1956)==(584 -(134 + 185)))) then v311=v252[v308];v312=v311[1134 -(88 + 461 + (1465 -881)) ];v331=1;end if (((5043 -(314 + 371))==(14960 -10602)) and (v331==(969 -(478 + (944 -(233 + 221)))))) then v310=1 + 0 ;break;end end end if ((v310==(1173 -((1817 -1031) + 386))) or ((10163 -7025)<(2372 -(1055 + 324)))) then v313=v311[1342 -(1093 + 247) ];if (((2960 + 370)>2323) and (v312==v86) and (v313>=v206)) then local v347=0 + 0 ;local v348;local v349;while true do if ((v347==(0 -0)) or ((12305 -8679)==(11350 -7361))) then v348=0 -0 ;v349=nil;v347=1;end if ((v347==1) or ((326 + 590)==(10289 -7618))) then while true do if (((937 -665)==272) and (v348==(0 + 0))) then v349=0 -0 ;while true do if ((4249<=(5527 -(364 + 324))) and (v349==0)) then v207[v313]=v312[v313];v311[(2 + 0) -1 ]=v207;break;end end break;end end break;end end end break;end end break;end if ((2777<(7678 -4478)) and ((0 + 0)==v309)) then v310=0 -0 ;v311=nil;v309=1 -0 ;end end end break;end end break;end end end break;end end end elseif (((288 -193)<(3225 -(1249 + 19))) and (v89<=(27 + 2))) then local v160=(1541 -(718 + 823)) -0 ;local v161;local v162;while true do if (((1912 -(686 + 252 + 148))<(1348 + (1174 -(266 + 539)))) and (0==v160)) then local v225=(648 -419) -(73 + 156) ;while true do if ((((1232 -(636 + 589)) + 1419)>=((4548 -2632) -(721 + 90))) and (v225==(1 + 0))) then v160=3 -2 ;break;end if (((3224 -(224 + 246))<=(5473 -2094)) and (v225==((0 -0) -0))) then v161=0 + 0 ;v162=nil;v225=1;end end end if ((v160==(1 + 0)) or ((2885 + 1042)==(2809 -1396))) then while true do if (((0 -0)==v161) or ((1667 -(203 + 246 + 64))<=(2781 -(1238 + 755)))) then v162=v88[2];do return v13(v86,v162,v162 + v88[1 + 2 ] );end break;end end break;end end elseif ((v89>30) or ((3177 -(709 + 825))>3379)) then v86[v88[3 -(1 + 0) ]]=v86[v88[3]]%v88[4] ;else do return v86[v88[2 -0 ]];end end elseif ((v89<=(900 -((1211 -(657 + 358)) + (1768 -1100)))) or ((11066 -8263)>4549)) then if ((v89<=33) or ((455 -235)>=(3855 -(171 + 662)))) then if ((2822==((6641 -3726) -(4 + 89))) and (v89>(111 -79))) then v86[v88[1 + 1 ]]=v86[v88[(1200 -(1151 + 36)) -10 ]] -v86[v88[2 + 2 ]] ;else for v170=v88[(1437 + 51) -(35 + 382 + 1069) ],v88[1456 -(28 + 1425) ] do v86[v170]=nil;end end elseif ((v89<=((6053 -4026) -(941 + 1052))) or ((1018 + 43)==(3371 -(822 + 692)))) then v86[v88[2 -0 ]][v88[2 + 1 ]]=v88[301 -(45 + 252) ];elseif (((2731 + 29)>(470 + 894)) and (v89>35)) then v86[v88[4 -2 ]]=v30(v81[v88[436 -(114 + 319) ]],nil,v63);else do return;end end elseif ((v89<=((1887 -(1552 + 280)) -16)) or (((7115 -(64 + 770)) -1379)<=3595)) then if ((v89<=(17 + 7 + 13)) or (3852==(436 -143))) then local v166=0;local v167;local v168;while true do if ((v166==(0 -0)) or ((3522 -(556 + 1407))==(5794 -(741 + 465)))) then v167=465 -((385 -215) + 295) ;v168=nil;v166=1;end if ((v166==1) or ((2363 + 2121)==(724 + 64))) then while true do if (((11246 -6678)>=(3239 + 668)) and (v167==(0 + 0))) then v168=v88[1 + 1 + 0 ];v86[v168](v13(v86,v168 + (1231 -(957 + 273)) ,v70));break;end end break;end end elseif (((334 + (2155 -(157 + 1086)))<(1390 + 2080)) and (v89>(144 -(211 -105)))) then local v210=0;local v211;local v212;local v213;local v214;local v215;while true do if (((10720 -6652)>=(2968 -1996)) and (v210==2)) then v215=nil;while true do if (((2441 -1948)<(5673 -(389 + 1391))) and (v211==(2 + 0))) then for v287=v212,v70 do local v288=0;local v289;while true do if ((v288==(0 + 0)) or ((3353 -1880)>=(4283 -(783 + 168)))) then v289=0 -0 ;while true do if ((v289==0) or ((17742 -13691)<=(1139 + 18))) then v215=v215 + (312 -((473 -164) + 2)) ;v86[v287]=v213[v215];break;end end break;end end end break;end if (((1854 -1250)<2881) and (v211==(1212 -(1090 + (165 -43))))) then v212=v88[1 + 1 ];v213,v214=v83(v86[v212]());v211=3 -2 ;end if ((v211==(1 + 0)) or ((2018 -(628 + 490))==3377)) then local v275=0;while true do if (((800 + 3659)>(1462 -871)) and (v275==(0 -0))) then v70=(v214 + v212) -(775 -(431 + 343)) ;v215=0;v275=1;end if (((6862 -3464)>=(6928 -4533)) and (v275==(1 + 0))) then v211=1 + 1 ;break;end end end end break;end if ((v210==(1696 -(556 + 1139))) or ((2198 -(6 + (828 -(599 + 220))))>=2824)) then v213=nil;v214=nil;v210=2;end if ((1936==(355 + 1581)) and (v210==(0 + 0))) then v211=169 -(28 + (280 -139)) ;v212=nil;v210=1;end end else v62[v88[2 + (1932 -(1813 + 118)) ]]=v86[v88[2 -0 ]];end elseif ((v89<=40) or ((3423 + 1409)<4313)) then v86[v88[1319 -(356 + 130 + 831) ]]=v88[3]~=((1217 -(841 + 376)) -0) ;elseif (((14392 -10304)>(733 + 3141)) and (v89==(129 -88))) then v86[v88[1265 -((935 -267) + 595) ]][v88[3 + 0 ]]=v86[v88[1 + 3 ]];else local v220=(0 + 0) -0 ;local v221;local v222;while true do if ((4332==(4622 -(23 + 267))) and (v220==((5306 -3362) -(1129 + (1674 -(464 + 395)))))) then local v240=387 -(371 + 16) ;while true do if (((5749 -(1326 + 424))>=2900) and (v240==(1 -0))) then v220=1;break;end if ((v240==(0 -0)) or ((9226 -(3219 + 3482))>(4182 -((925 -(467 + 370)) + 30)))) then v221=v88[773 -(720 + 51) ];v222=v86[v88[6 -3 ]];v240=1777 -(421 + 1355) ;end end end if (((7210 -2839)==(2148 + 2223)) and (v220==1)) then v86[v221 + (1084 -(286 + 797)) ]=v222;v86[v221]=v222[v88[14 -10 ]];break;end end end v69=v69 + (1 -0) ;break;end end break;end end end end A,B=v28(v11(v73));if  not A[1] then local v95=v61[4][v69] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end